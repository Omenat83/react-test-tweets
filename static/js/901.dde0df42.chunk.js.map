{"version":3,"file":"static/js/901.dde0df42.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.jsx","components/UsersList/UserList.styled.js","components/UsersList/UsersList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/TweetsPage/TweetsPage.styled.js","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["export const getFilter = state => state.filter;\n\nexport const getAllTweets = state => state.tweets;\n\n\n\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 3px;\n  background-color: #5736a3;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  margin-top: 20px;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #471ca9;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Button } from './Button.styled';\n\nexport const LoadMoreBtn = ({ onClick }) => {\n  return (\n    <Button type=\"button\" onClick={() => onClick()}>\n      Load more\n    </Button>\n  );\n};\n\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n}","import styled from 'styled-components';\n\nexport const LoaderDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderDiv } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderDiv>\n      {' '}\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#471CA9\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.li`\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const ImgContainer = styled.div`\n  height: 218px;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -4px;\n    left: 0;\n    width: 100%;\n    height: 8px;\n    background: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  top: 0px;\n  left: 20px;\n`;\nexport const Picture = styled.img`\n  margin: 28px 36px 16px;\n`;\n\nexport const AvatarContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%, 50%);\n  z-index: 2;\n  width: 80px;\n  height: 80px;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const Avatar = styled.img`\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 50px 16px 36px;\n  align-items: center;\n`;\nexport const Tweets = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  margin-bottom: 16px;\n`;\nexport const Followers = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  margin-bottom: 26px;\n`;\nexport const UserBtn = styled.button`\n  width: 196px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  padding: 14px 28px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n\n  &:hover {\n    box-shadow: inset 0 0 30px 10px #646cffaa;\n    cursor: pointer;\n  }\n`;\n","import {\n  Card,\n  ImgContainer,\n  Logo,\n  Picture,\n  AvatarContainer,\n  Avatar,\n  UserInfo,\n  Tweets,\n  Followers,\n  UserBtn,\n} from './UserCard.styled';\nimport logo from '../../Images/logo.png';\nimport picture from '../../Images/picture.png';\nimport { useDispatch } from 'react-redux';\nimport { toggleTweetsThunk } from 'redux/Tweets/thunks';\nimport PropTypes from 'prop-types';\n\nexport const UserCard = ({ tweet }) => {\n  const dispatch = useDispatch();\n\n  const handleToggle = () => {\n    dispatch(toggleTweetsThunk(tweet));\n  };\n\n  const { id, user, tweets, avatar, followers, following } = tweet;\n  return (\n    <Card id={id}>\n      <ImgContainer>\n        <Logo src={`${logo}`} alt=\"logo\" />\n        <Picture src={`${picture}`} alt={user} />\n        <AvatarContainer>\n          <Avatar src={avatar} alt=\"user photo\" />\n        </AvatarContainer>\n      </ImgContainer>\n      <UserInfo>\n        <Tweets>{tweets} tweets</Tweets>\n        <Followers>\n          {followers.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} Followers\n        </Followers>\n        <UserBtn\n          type=\"button\"\n          style={{ background: following ? '#5CD3A8' : '#EBD8FF' }}\n          onClick={handleToggle}\n        >\n          {following ? 'following' : 'follow'}\n        </UserBtn>\n      </UserInfo>\n    </Card>\n  );\n};\n\nUserCard.propTypes = {\n  tweet: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    user: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    followers: PropTypes.number.isRequired,\n    following: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const UserListUl = styled.ul`\n max-width: 1200px;\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));\n  gap: 30px;\n  justify-items: center;\n  margin: 0 auto;\n  margin-bottom: 30px;\n`","import { Loader } from 'components/Loader/Loader';\nimport { UserCard } from 'components/UserCard/UserCard';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport toast from 'react-hot-toast';\nimport { UserListUl } from './UserList.styled';\n\nexport const UsersList = () => {\n  const { tweets, isLoading, error } = useSelector(state => state.tweets);\n\n  const filter = useSelector(getFilter);\n\n  return (\n    <>\n      <UserListUl>\n        {tweets.length > 0 &&\n          tweets.map(\n            tweet =>\n              tweet.following.toString().includes(filter) && (\n                <UserCard key={tweet.id} tweet={tweet} />\n              )\n          )}\n      </UserListUl>\n      {isLoading && <Loader />}\n      {error && toast.error(error)}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  font-size: 20px;\n  display: flex;\n  font-weight: 500;\n  align-items: center;\n  gap: 10px;\n`;\nexport const FilterSelect = styled.select`\n  font-size: 18px;\n  font-weight: 500;\n  border-radius: 3px;\n  padding: 5px 10px;\n  color: #5736a3;\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/Filter/filterSlice';\nimport { clearTweets } from 'redux/Tweets/tweetsSlice';\nimport PropTypes from 'prop-types';\nimport { FilterLabel, FilterSelect } from './Filter.styled';\n\nexport const Filter = ({ setCurrentPage }) => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = evt => {\n    dispatch(setFilter(evt.target.value));\n    dispatch(clearTweets([]));\n    setCurrentPage(1);\n  };\n\n  return (\n    <FilterLabel>\n      Select an option\n      <FilterSelect defaultValue=\"\" onChange={handleChangeFilter}>\n        <option value=\"\">Show all</option>\n        <option value=\"false\">Follow</option>\n        <option value=\"true\">Following</option>\n      </FilterSelect>\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  setCurrentPage: PropTypes.func.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TweetsContainer = styled.div`\n  max-width: 100%;\n  text-align: center;\n`;\n\nexport const TweetsTop = styled.div`\ndisplay: flex;\njustify-content: space-between;\npadding: 20px 50px;\n`\nexport const BackLink = styled(Link)`\n  display: flex;\n  gap: 7px;\n  align-items: center;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 22px;\n\n  &:hover {\n    color: #5736a3;\n  }\n`;","import { useEffect, useRef, useState } from 'react';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTweetsThunk } from 'redux/Tweets/thunks';\nimport { getFilter } from 'redux/selectors';\nimport { LoadMoreBtn } from 'components/Button/Button';\nimport { clearTweets } from 'redux/Tweets/tweetsSlice';\nimport { UsersList } from 'components/UsersList/UsersList';\nimport { Filter } from 'components/Filter/Filter';\nimport { BackLink, TweetsContainer, TweetsTop } from './TweetsPage.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst TweetsPage = () => {\n  const backLink = useRef('/');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const { tweets, isLoading, endList } = useSelector(state => state.tweets);\n\n  useEffect(() => {\n    dispatch(getTweetsThunk({ page: currentPage, following: filter }));\n  }, [dispatch, currentPage, filter]);\n\n  // скидання стору при розмонтуванні сторінки\n  useEffect(() => {\n    return () => {\n      setCurrentPage(1);\n      dispatch(clearTweets([]));\n    };\n  }, [dispatch]);\n\n  // збільшуємо номер сторінки\n  const onLoadMore = () => {\n    setCurrentPage(prevState => prevState + 1);\n  };\n\n  return (\n    <TweetsContainer>\n      <TweetsTop>\n        <BackLink to={backLink.current}>\n          <IoMdArrowRoundBack />\n          Back to main page\n        </BackLink>\n        <Filter setCurrentPage={setCurrentPage} />\n      </TweetsTop>\n      {tweets.length > 0 && <UsersList />}\n      {isLoading && currentPage === 1 && <Loader />}\n      {!endList && <LoadMoreBtn onClick={onLoadMore} />}\n    </TweetsContainer>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["getFilter","state","filter","Button","styled","LoadMoreBtn","onClick","type","LoaderDiv","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Card","ImgContainer","Logo","Picture","AvatarContainer","Avatar","UserInfo","Tweets","Followers","UserBtn","UserCard","tweet","dispatch","useDispatch","id","user","tweets","avatar","followers","following","src","alt","picture","toString","replace","style","background","toggleTweetsThunk","UserListUl","UsersList","useSelector","isLoading","error","length","map","includes","toast","FilterLabel","FilterSelect","Filter","setCurrentPage","defaultValue","onChange","evt","setFilter","target","value","clearTweets","TweetsContainer","TweetsTop","BackLink","Link","backLink","useRef","useState","currentPage","endList","useEffect","getTweetsThunk","page","to","current","prevState"],"sourceRoot":""}